#textdomain wesnoth-War_of_Legends

#define ABILITY_DESCEND_INTO_DARKNESS
    [teleport]
        name=_ "descend into darkness"
        description=_ "Teleports to nearby allied Priestesses, Matriarchs, Patronesses or Seers."
        special_note=_" This unit is able to teleport to nearby allied Priestesses, Matriarchs, Patronesses, Harbingers or Seers."
        [tunnel]
            [filter]
            [/filter]
            [source]
                x,y=$teleport_unit.x,$teleport_unit.y
            [/source]
            [target]
                [filter]
                    type=Priestress of the Vault, Matriarch, Patroness, Seer, Harbinger
                    [filter_side]
                        [allied_with]
                            side=$teleport_unit.side
                        [/allied_with]
                    [/filter_side]
                [/filter]
            [/target]
        [/tunnel]
    [/teleport]
#enddef

#define ABILITY_HUNTER_ASPECT
    [hunter_aspect]
        id=knyght_wol_hunter_aspect
        name="aspect of the hunter"
        special_note=_"This unit is a hunter. Whenever it kills another unit, it deals more damage against units of the defeated unit's race."
        description=_ "Once this unit kills another unit, it will gain the 'hunter' weapon special, granting it additional damage against the race of the killed unit."
    [/hunter_aspect]
#enddef

#define WEAPON_SPECIAL_HUNTER_BASE RACE DISPLAYRACE
    [damage]
        id=hunter_aspect_generic
        name= _ "hunting "+{DISPLAYRACE}
        description= _ "This unit deals +2 damage on offense against "+{DISPLAYRACE} + " (id={RACE})"
        add=2
        active_on=offense
        apply_to=attacker
        [filter_opponent]
            race={RACE}
        [/filter_opponent]
    [/damage]
#enddef

#define WEAPON_SPECIAL_HUNTER_EVENT
    [event]
        name=die
        first_time_only=no
        id=knyght_wol_hunter_aspect_event_die
        [filter]
        [/filter]
        [filter_second]
            ability=knyght_wol_hunter_aspect
        [/filter_second]

        [unstore_unit]
            variable=second_unit
            {COLOR_HARM}
            text= _ "The hunt begins!"
            find_vacant=no
        [/unstore_unit]

        [lua]
            code=<<wml.variables["display_race"] = wesnoth.races[wml.variables["unit.race"]].plural_name>>
        [/lua]

        [object]
            silent=yes
            [filter]
                x,y=$x2,$y2
            [/filter]
            [effect]
                apply_to=attack
                remove_specials=hunter_aspect_generic
            [/effect]
            [effect]
                apply_to=attack
                range=melee
                [set_specials]
                    mode=append
                    {WEAPON_SPECIAL_HUNTER_BASE $unit.race $display_race}
                [/set_specials]
            [/effect]
        [/object]
        {CLEAR_VARIABLE display_race}
    [/event]
#enddef

#define WEAPON_SPECIAL_WILL_OF_SHASSAGOTH
    [wos]
        id=will of shassagoth
        name= _ "will of shassagoth"
        description=_ "The attack gains +1 damage per killed unit."
        special_note=_" This unit is able to become stronger by killing enemy units."
    [/wos]
#enddef

#define WEAPON_SPECIAL_WILL_OF_SHASSAGOTH_EVENT
    [event]
        name=die
        first_time_only=no

        [filter]
        [/filter]
        [filter_second_attack]
            special_id=will of shassagoth
        [/filter_second_attack]

        [unstore_unit]
            variable=second_unit
            {COLOR_HEAL}
            text= _ "+1 damage"
            find_vacant=no
        [/unstore_unit]

        [object]
            silent=yes
            duration=forever

            [filter]
                x,y=$x2,$y2
            [/filter]

            [effect]
                apply_to=attack
                name=will of shassagoth
                increase_damage=+1
            [/effect]
        [/object]
    [/event]
#enddef

#define WEAPON_SPECIAL_KNOCKBACK
    [attacks]
        id=MINOTAUR_knockback
        name= _ "knockback"
        description= _ "When a unit is hit with a knockback attack, it is immediately pushed back one hex away from the attacker. Units cannot be knocked back into an occupied hex or onto terrain they normally could not move to. Only works on offense."
        special_note=_" This unit is able to knockback enemy units."
        value=0
        active_on=
        apply_to=opponent
        [filter_defender]
            [not]
                type=Dwarvish Ulfserker, Dwarvish Berserker
            [/not]
        [/filter_defender]
    [/attacks]
#enddef

#define WEAPON_SPECIAL_KNOCKBACK_EVENT
    # knockback special event
    [event]
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special_id=MINOTAUR_knockback
        [/filter_attack]

        [store_locations]
            [not]
                [filter]
                [/filter]
                [or]
                    terrain=M*,Q*,X*,Wo*^* #mountains, unwalkable, impassable, and deep water
                [/or]
            [/not]

            [filter_adjacent_location]
                x,y=$x2,$y2
                adjacent=-$unit.facing
            [/filter_adjacent_location]

            variable=knockback_target_hex
        [/store_locations]

        [if]
            [variable]
                name=knockback_target_hex.length
                greater_than=0
            [/variable]

            [then]
                {IF_VAR second_unit.hitpoints less_than_equal_to 0 (
                    [then]
                    [/then]
                    [else]
                        [teleport]
                            [filter]
                                x,y=$x2,$y2
                            [/filter]
                            animate=no

                            x,y=$knockback_target_hex.x,$knockback_target_hex.y
                            check_passability=yes
                            clear_shroud=yes
                        [/teleport]
                    [/else]
                )}

                [redraw]
                [/redraw]
                [if]
                    [have_unit]
                        x,y=$knockback_target_hex.x,$knockback_target_hex.y
                        id=$second_unit.id
                    [/have_unit]

                    [then]
                        [fire_event]
                            name=moveto
                            [primary_unit]
                                x,y=$knockback_target_hex.x,$knockback_target_hex.y
                            [/primary_unit]
                        [/fire_event]
                    [/then]
                [/if]
            [/then]
        [/if]

        {CLEAR_VARIABLE knockback_direction,knockback_target_hex}
    [/event]
#enddef

#define WEAPON_SPECIAL_LINE_DAMAGE
    [line_damage]
        id=line_damage
        name="line damage"
        description=_ "This unit deals half damage to the unit that is standing behind the attacked unit."
        special_note=_" This unit deals half damage to the unit that is standing behind the attacked unit."
    [/line_damage]
#enddef

#define WEAPON_SPECIAL_ETHER_GRIP
    [ethergrip]
        id=lowres_ethergrip
        name= _ "ether grip"
        description=_ "When a unit is hit with the ether grip weapon special, it will receive +20% damage until the end of the turn."
    [/ethergrip]
#enddef

#define WEAPON_SPECIAL_ETHER_GRIP_EVENTS
    [event]
        name=attacker_hits
        first_time_only=no

        [filter_attack]
            special_id=lowres_ethergrip
        [/filter_attack]

        [filter_second]
            [not]
                level=0
                [or]
                    status=res_ethergrip
                [/or]
            [/not]
        [/filter_second]

        {VARIABLE second_unit.status.res_ethergrip yes}

        [unstore_unit]
            variable=second_unit
            find_vacant=no
            text= _ "ether grip"
            female_text= _ "female^ether grip"
            red,green,blue=175,65,155
        [/unstore_unit]

        [object]
            silent=yes
            duration=turn end

            [filter]
                x,y=$x2,$y2
            [/filter]

            [effect]
                apply_to=image_mod
                replace="BLEND(175,65,155,0.5)"
            [/effect]
            [effect]
                apply_to=image_mod
                add="O(60%)"
            [/effect]

            [effect]
                apply_to=resistance
                replace=no
                [resistance]
                    fire=+20
                    arcane=+20
                    blade=+20
                    impact=+20
                    cold=+20
                    electric=+20
                    energy=+20
                    arcane_focus=-20
                    pierce=+20
                [/resistance]
            [/effect]
        [/object]
    [/event]

    [event]
        name=side turn end
        first_time_only=no

        [store_unit]
            [filter]
                side=$side_number
                status=res_ethergrip
            [/filter]
            variable=res_ethergrip
        [/store_unit]

        [foreach]
            array=res_ethergrip

            [do]
                {CLEAR_VARIABLE res_ethergrip[$i].status.res_ethergrip}

                [unstore_unit]
                    variable=res_ethergrip[$i]
                [/unstore_unit]
            [/do]
        [/foreach]

        {CLEAR_VARIABLE res_ethergrip}
    [/event]
#enddef

#define ABILITY_LITHIC_IDOL
    [idol_of_stone]
        id= idol_of_stone
        name= _"lithic idol"
        description= _"This unit turns to stone at day. It then regenerates +10 hitpoints per turn."
        special_note=_" This unit turns to stone at day. It then regenerates +10 hitpoints per turn."
    [/idol_of_stone]
#enddef

#define ABILITY_LITHIC_IDOL_EVENTS
    [event]
        name=recruit,recall,unit_placed
        first_time_only=no
        id=wol_ability_lithic_idol_unit_placed_petrify_event
        priority=50

        [filter]
            ability=idol_of_stone
        [/filter]

        [store_time_of_day]
            x=$x1
            y=$y1
        [/store_time_of_day]

        [if]
            [not]
                [variable]
                    name=time_of_day.lawful_bonus
                    greater_than=0
                [/variable]
            [/not]
            [then]
                [unpetrify]
                    ability=idol_of_stone
                [/unpetrify]
            [/then]
            [else]
                [petrify]
                    ability=idol_of_stone
                [/petrify]
            [/else]
        [/if]
    [/event]

    [event]
        name=side_1_turn
        first_time_only=no
        id=wol_ability_lithic_idol_turn_start_petrify_event
        priority=50

        [store_time_of_day]
        [/store_time_of_day]

        [if]
            [not]
                [variable]
                    name=time_of_day.lawful_bonus
                    greater_than=0
                [/variable]
            [/not]
            [then]
                [unpetrify]
                    ability=idol_of_stone
                [/unpetrify]
            [/then]
            [else]
                [petrify]
                    ability=idol_of_stone
                    # side=$side_number
                [/petrify]
                [heal_unit]
                    [filter]
                        ability=idol_of_stone
                        # side=$side_number
                    [/filter]
                    amount=10
                    animate=yes
                    restore_statuses=no
                [/heal_unit]
            [/else]
        [/if]
    [/event]
#enddef

#define ABILITY_STARDUST
    [attacks]
        id= stardust
        name= _"stardust"
        description= _"When used in defense, this attacks reduces the attacker's number of strikes by 1."
        special_note=_"When used in defense, this unit reduces the attacker's number of strikes by 1."
        sub=1
        active_on=defense
        apply_to=attacker
    [/attacks]
#enddef

#define ABILITY_SPURT
    [spurt]
        id=spurt
        name="spurt"
        description=_ "This unit regains movement points after an attack. Only works at night."
        special_note=_"This unit is able to move again after a nightly attack."
    [/spurt]
#enddef

#define ABILITY_SPURT_EVENT
    [event]
        name=attack_end
        first_time_only=no
        id=knyght_wol_spurt_event

        [filter]
            ability=spurt
        [/filter]

        [store_time_of_day]
            x,y=$x1,$y1
        [/store_time_of_day]

        [if]
            [variable]
                name=time_of_day.lawful_bonus
                less_than=0
            [/variable]
            [then]
                [unstore_unit]
                    variable=unit
                    {COLOR_HARM}
                    text= _ "Spurt!"
                    find_vacant=no
                [/unstore_unit]

                [heal_unit]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    amount=0
                    moves=2
                    animate=no
                    restore_attacks=no
                [/heal_unit]

                # all units of ability spurt
                # have this in their unit files
                [animate_unit]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    flag=blessing_of_the_night
                [/animate_unit]

                [select_unit]
                    x,y=$x1,$y1
                [/select_unit]
            [/then]
        [/if]
    [/event]
#enddef

#define WEAPON_SPECIAL_TRAMPLE
    [attacks]
        id=trample
        name= _ "trample"
        description= _ "This unit ignores the retaliation of the enemy and overruns just it."
        value=0
        apply_to=opponent
        special_note=_" This unit is able to overrun an enemy. Whenever it attacks, it moves across the field of the defending unit."
    [/attacks]
#enddef

#define WEAPON_SPECIAL_TRAMPLE_EVENT
    [event]
        name=attack end
        first_time_only=no

        [filter_attack]
            special_id=trample
        [/filter_attack]

        [store_locations]
            [not]
                [filter]
                [/filter]
            [/not]

            [filter_adjacent_location]
                x,y=$x2,$y2
                adjacent=-$unit.facing
            [/filter_adjacent_location]

            variable=trample_target_hex
        [/store_locations]

        [if]
            [variable]
                name=trample_target_hex.length
                greater_than=0
            [/variable]

            [then]
                [teleport]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    animate=no

                    x,y=$trample_target_hex.x,$trample_target_hex.y
                    check_passability=yes
                    clear_shroud=yes
                [/teleport]
                [redraw]
                [/redraw]
            [/then]
        [/if]
        [if]
            [variable]
                name=second_unit.level
                equals=1
            [/variable]
            [then]
                [modify_unit]
                    [filter]
                        id=$unit.id
                    [/filter]
                    [effect]
                        apply_to=experience
                        increase=+1
                    [/effect]
                [/modify_unit]
            [/then]
            [elseif]
                [variable]
                    name=second_unit.level
                    equals=2
                [/variable]
                [then]
                    [modify_unit]
                        [filter]
                            id=$unit.id
                        [/filter]
                        [effect]
                            apply_to=experience
                            increase=+2
                        [/effect]
                    [/modify_unit]
                [/then]
            [/elseif]
            [elseif]
                [variable]
                    name=second_unit.level
                    equals=3
                [/variable]
                [then]
                    [modify_unit]
                        [filter]
                            id=$unit.id
                        [/filter]
                        [effect]
                            apply_to=experience
                            increase=+3
                        [/effect]
                    [/modify_unit]
                [/then]
            [/elseif]
            [elseif]
                [variable]
                    name=second_unit.level
                    equals=4
                [/variable]
                [then]
                    [modify_unit]
                        [filter]
                            id=$unit.id
                        [/filter]
                        [effect]
                            apply_to=experience
                            increase=+4
                        [/effect]
                    [/modify_unit]
                [/then]
            [/elseif]
            [elseif]
                [variable]
                    name=second_unit.level
                    equals=5
                [/variable]
                [then]
                    [modify_unit]
                        [filter]
                            id=$unit.id
                        [/filter]
                        [effect]
                            apply_to=experience
                            increase=+5
                        [/effect]
                    [/modify_unit]
                [/then]
            [/elseif]
            [elseif]
                [variable]
                    name=second_unit.level
                    equals=6
                [/variable]
                [then]
                    [modify_unit]
                        [filter]
                            id=$unit.id
                        [/filter]
                        [effect]
                            apply_to=experience
                            increase=+6
                        [/effect]
                    [/modify_unit]
                [/then]
            [/elseif]
        [/if]
        [if]
            [variable]
                name=second_unit.hitpoints
                less_than=1
            [/variable]
            [then]
                [if]
                    [variable]
                        name=second_unit.level
                        equals=1
                    [/variable]
                    [then]
                        [modify_unit]
                            [filter]
                                id=$unit.id
                            [/filter]
                            [effect]
                                apply_to=experience
                                increase=+8
                            [/effect]
                        [/modify_unit]
                    [/then]
                    [elseif]
                        [variable]
                            name=second_unit.level
                            equals=0
                        [/variable]
                        [then]
                            [modify_unit]
                                [filter]
                                    id=$unit.id
                                [/filter]
                                [effect]
                                    apply_to=experience
                                    increase=+4
                                [/effect]
                            [/modify_unit]
                        [/then]
                    [/elseif]
                    [elseif]
                        [variable]
                            name=second_unit.level
                            equals=2
                        [/variable]
                        [then]
                            [modify_unit]
                                [filter]
                                    id=$unit.id
                                [/filter]
                                [effect]
                                    apply_to=experience
                                    increase=+16
                                [/effect]
                            [/modify_unit]
                        [/then]
                    [/elseif]
                    [elseif]
                        [variable]
                            name=second_unit.level
                            equals=3
                        [/variable]
                        [then]
                            [modify_unit]
                                [filter]
                                    id=$unit.id
                                [/filter]
                                [effect]
                                    apply_to=experience
                                    increase=+24
                                [/effect]
                            [/modify_unit]
                        [/then]
                    [/elseif]
                    [elseif]
                        [variable]
                            name=second_unit.level
                            equals=4
                        [/variable]
                        [then]
                            [modify_unit]
                                [filter]
                                    id=$unit.id
                                [/filter]
                                [effect]
                                    apply_to=experience
                                    increase=+32
                                [/effect]
                            [/modify_unit]
                        [/then]
                    [/elseif]
                    [elseif]
                        [variable]
                            name=second_unit.level
                            equals=5
                        [/variable]
                        [then]
                            [modify_unit]
                                [filter]
                                    id=$unit.id
                                [/filter]
                                [effect]
                                    apply_to=experience
                                    increase=+40
                                [/effect]
                            [/modify_unit]
                        [/then]
                    [/elseif]
                    [elseif]
                        [variable]
                            name=second_unit.level
                            equals=6
                        [/variable]
                        [then]
                            [modify_unit]
                                [filter]
                                    id=$unit.id
                                [/filter]
                                [effect]
                                    apply_to=experience
                                    increase=+48
                                [/effect]
                            [/modify_unit]
                        [/then]
                    [/elseif]
                [/if]
            [/then]
        [/if]

        [store_unit]
            [filter]
                id=$unit.id
            [/filter]
            kill=yes
            variable=trampler
        [/store_unit]

        [unstore_unit]
            variable=trampler
            advance=yes
            find_vacant=no
            x,y=$trampler.x,$trampler.y
        [/unstore_unit]

        {CLEAR_VARIABLE trample_direction,trample_target_hex}
    [/event]
#enddef

#define ABILITY_NOCTURNAL_REGENERATION
    [regenerate]
        value=4
        id=nocturnal_regen_4
        name="nocturnal regenerates +4"
        description=_"The unit will heal itself 4 HP during night/other dark ToD (including tiles darkened by dark aura). If it is poisoned, it will remove the poison instead of healing."
        affect_self=yes
        poison=cured
        [filter_self]
            [filter_location]
                time_of_day=chaotic
            [/filter_location]
        [/filter_self]
    [/regenerate]
#enddef

#textdomain wesnoth-War_of_Legends

######################################################################################
# These are some WML macros that deal with the (mostly Lua) inventory system.
# It used to be hardcoded to work with side 1 only, but this should no longer be true
######################################################################################

#define WOL_POOL_DUMMY
    ################################################################
    # this is to suppress the warning spam from lua/Status_Test.lua, if there is no inventory
    ################################################################
    [if]
        [variable]
            name=gear_pool.length
            not_equals=1
        [/variable]
        [then]
            [set_variable]
                name=gear_pool.dummy
                value=0
            [/set_variable]
        [/then]
    [/if]
    ################################################################
#enddef

# a little status icon to say that a unit has equipment (of any sort)
#define WOL_INIT_LUA_ICON
    [event]
        name=preload
        first_time_only=no
        [lua]
            code=<<
            local _ = wesnoth.textdomain "wesnoth-War_of_Legends"
            local old_unit_status = wesnoth.interface.game_display.unit_status
            function wesnoth.interface.game_display.unit_status()
                local u = wesnoth.interface.get_displayed_unit()
                if not u then return {} end
                local s = old_unit_status()
		if u.variables.gear then		    
                    table.insert(s, { "element", {
                        image = "misc/pack.png",
                        tooltip = _"This unit has equipment."
                    } })
                end
                return s
            end
        >>
        [/lua]
        [set_variable]
            name=WOL_gear_lua_tooltip
            value=fired
        [/set_variable]
    [/event]
#enddef

#define WOL_INIT_LUA_PRESTART

    ##########################################
    # units recruited in BfW 1.13.8 seem to no longer have [variables], causing inventory to crash.  This is a hack/fix, not sure if it catches everything...
    [event]
        name=recruit
        first_time_only=no
        #	[filter]
        #	    [filter_side]
        #		controller=human
        #	    [/filter_side]
        #	[/filter]
        [store_unit]
            [filter]
                id=$unit.id
            [/filter]
            variable=init_on_call
            kill=no
        [/store_unit]
        [set_variable]
            name=init_on_call.variables.dummy
            value=yes
        [/set_variable]
        [set_variable]
            name=init_on_call.status.dummy
            value=yes
        [/set_variable]
        [set_variable]
            name=init_on_call.variables.weight
            value=0
        [/set_variable]
        [unstore_unit]
            variable=init_on_call
            find_vacant=no
        [/unstore_unit]
        {CLEAR_VARIABLE init_on_call}
    [/event]
    ##########################################

    [event]
        name=prestart
        {WOL_POOL_DUMMY}
        # to make sure each unit gets a status & variables tag, to fix a change made in BfW 1.13.8
        [store_unit]
            [filter]
                [not]
                    [filter_wml]
                        [status]
                            dummy=yes
                        [/status]
                    [/filter_wml]
                [/not]
            [/filter]
            variable=init_stat
            kill=no
        [/store_unit]
        {FOREACH init_stat iis}
            [set_variable]
                name=init_stat[$iis].status.dummy
                value=yes
            [/set_variable]
            [set_variable]
                name=init_stat[$iis].variables.dummy
                value=yes
            [/set_variable]
            [set_variable]
                name=init_stat[$iis].variables.weight
                value=0
            [/set_variable]
            [unstore_unit]
                variable=init_stat[$iis]
                find_vacant=no
            [/unstore_unit]
        {NEXT iis}
        {CLEAR_VARIABLE init_stat}
        [if]
            [have_unit]
                # only side 1 is on worldmap, so side=1 is OK here, but not for status menu
                side=1
                [filter_side]
                    controller=human
                [/filter_side]
            [/have_unit]
            [then]
                [store_unit]
                    [filter]
                        side=1
                        [not]
                            [filter_wml]
                                [variables]
                                    on_call=yes
                                [/variables]
                            [/filter_wml]
                        [/not]
                    [/filter]
                    variable=init_on_call
                    kill=no
                [/store_unit]
                {FOREACH init_on_call iioc}
                    [set_variable]
                        name=init_on_call[$iioc].variables.on_call
                        value=no
                    [/set_variable]
                    [unstore_unit]
                        variable=init_on_call[$iioc]
                        find_vacant=no
                    [/unstore_unit]
                {NEXT iioc}
                {CLEAR_VARIABLE init_on_call}
            [/then]
        [/if]
        [set_menu_item]
            description = _ "Unit Status"
            id = "inventory_item"
            [show_if]
                [have_unit]
                    x,y=$x1,$y1
                    side=$side_number
                [/have_unit]
                [not] # this is to prevent it from showing up on World Map, it's a hack
                    [have_location]
                        x,y=100,75
                        terrain=Gs^Fp
                    [/have_location]
                [/not]
            [/show_if]
            [command]
                [lua]
                    code= <<
                                local test_dialog2 = Status_test.new()
                        >>
                [/lua]
            [/command]
        [/set_menu_item]
        [if]
            [variable]
                name=total_on_call
                greater_than=0
            [/variable]
            [else]
                [set_variable]
                    name=total_on_call
                    value=0
                [/set_variable]
            [/else]
        [/if]
    [/event]

#enddef

#define WOL_INIT_WML_MOVETO

    [event]
        name=moveto
        first_time_only=no
        [filter]
            #           side=1
            #            [filter_side]
            #                controller=human
            #            [/filter_side]
            [filter_location]
                find_in=gear_map_items
            [/filter_location]
        [/filter]
        {FOREACH gear_map_items mi}
            [if]
                [variable]
                    name=gear_map_items[$mi].x
                    equals=$x1
                [/variable]
                [variable]
                    name=gear_map_items[$mi].y
                    equals=$y1
                [/variable]
                [then]
                    [apply_gear]
                        id = $unit.id
                        gear_id = $gear_map_items[$mi].id
                    [/apply_gear]
                    # might need to re-think this
                    [set_variable]
                        name=mi
                        value=$gear_map_items.length
                    [/set_variable]
                    #                    [floating_text]
                    #                        x,y=$x1,$y1
                    #                        text="<span color='#99aaaa'>" + _ "Takes item..." + "</span>"
                    #                    [/floating_text]
                [/then]
            [/if]
        {NEXT mi}
    [/event]
    # otherwise, these things carry over between maps, and you get random, invisible items being picked up.
    [event]
        name=victory
        {CLEAR_VARIABLE gear_map_items}
    [/event]

#enddef

#define WOL_INIT_WML_DIE

    [event]
        name = die
        first_time_only = no
        [filter]
            [filter_wml]
                [variables]
                    [gear]
                    [/gear]
                [/variables]
            [/filter_wml]
        [/filter]
        {FOREACH unit.variables.gear gi}
            [gear_item]
                x,y=$x1,$y1
                gear_id = $unit.variables.gear[$gi].id
            [/gear_item]
        {NEXT gi}
    [/event]

#enddef

#define WOL_INIT_WML_ADVANCE
    # remove and reapply gear, so that it gets dropped if new unit type can't use an equipped item
    [event]
        name = post advance
        first_time_only = no
        [filter]
            [filter_wml]
                [variables]
                    [gear]
                    [/gear]
                [/variables]
            [/filter_wml]
        [/filter]
        {VARIABLE gi 0}
        [while]
            [variable]
                name=gi
                less_than=$unit.variables.gear.length
            [/variable]
            [do]
                [set_variable]
                    name=gear_id_TEMP
                    value = $unit.variables.gear[$gi].id
                [/set_variable]
                [remove_gear]
                    id=$unit.id
                    gear_id = $gear_id_TEMP
                [/remove_gear]
                [apply_gear]
                    id=$unit.id
                    gear_id = $gear_id_TEMP
                [/apply_gear]
                {CLEAR_VARIABLE gear_id_TEMP}
                [set_variable]
                    name=gi
                    add=1
                [/set_variable]
            [/do]
        [/while]
        {CLEAR_VARIABLE gi}
    [/event]

#enddef

#define WOL_INIT_WML_POOL_SWAP
    # problem with this plan is that anything added to invnetory during start, prestart, etc. will disappear

    [event]
        name=side turn end
        first_time_only=no
        [filter_condition]
            [have_unit]
                side=$side_number
                [filter_side]
                    controller=human
                [/filter_side]
            [/have_unit]
            [variable]
                name=gear_pool.length
                equals=1
            [/variable]
        [/filter_condition]
        [set_variables]
            name=gear_pool_$side_number|
            mode=replace
            to_variable=gear_pool
        [/set_variables]
        {CLEAR_VARIABLE gear_pool}
    [/event]

    [event]
        name=side turn
        first_time_only=no
        [filter_condition]
            [have_unit]
                side=$side_number
                [filter_side]
                    controller=human
                [/filter_side]
            [/have_unit]
            [variable]
                name=gear_pool_$side_number|.length
                equals=1
            [/variable]
        [/filter_condition]
        [set_variables]
            name=gear_pool
            mode=replace
            to_variable=gear_pool_$side_number|
        [/set_variables]
        {CLEAR_VARIABLE gear_pool_$side_number|}
    [/event]

    [event]
        name=side turn
        first_time_only=no
        {WOL_POOL_DUMMY}
    [/event]

    [event]
        name=victory
        # WTF was this for?
        #    [set_variable]
        #	name=side_number_
        #	value=1
        #    [/set_variable]
        [filter_condition]
            [have_unit]
                side=$side_number # does this variable exist now?
                [filter_side]
                    controller=human
                [/filter_side]
            [/have_unit]
            [variable]
                name=gear_pool.length
                equals=1
            [/variable]
            # so the inventory doesn't get wiped out by cut-scenes
            [variable]
                name=turn_number
                greater_than=1
            [/variable]
        [/filter_condition]
        [set_variables]
            name=gear_pool_$side_number|
            mode=replace
            to_variable=gear_pool
        [/set_variables]
        {CLEAR_VARIABLE gear_pool}
    [/event]

#enddef

#define WOL_INIT_RANDOM_GEAR_INTERNAL UNIT_TYPE GEAR_ID CHANCE
    [event]
        name=start
        [store_unit]
            [filter]
                type={UNIT_TYPE}
                [filter_side]
                    controller=ai
                [/filter_side]
            [/filter]
            kill=no
            variable=unit_add_gear_TEMP
        [/store_unit]
        [for]
            array=unit_add_gear_TEMP
            variable=uag_i
            [do]
                [set_variable]
                    name=chance_gear
                    rand=1..{CHANCE}
                [/set_variable]
                [if]
                    [variable]
                        name=chance_gear
                        equals=1
                    [/variable]
                    [then]
                        [apply_gear]
                            id=$unit_add_gear_TEMP[$uag_i].id
                            gear_id={GEAR_ID}
                        [/apply_gear]
                    [/then]
                [/if]
            [/do]
        [/for]
        {CLEAR_VARIABLE unit_add_gear_TEMP}
        {CLEAR_VARIABLE chance_gear}
    [/event]

    [event]
        name=recruit
        first_time_only=no
        [filter]
            type={UNIT_TYPE}
            [filter_side]
                controller=ai
            [/filter_side]
        [/filter]

        [store_unit]
            [filter]
                id=$unit.id
            [/filter]
            kill=no
            variable=unit_add_gear_TEMP
        [/store_unit]
        [for]
            array=unit_add_gear_TEMP
            variable=uag_i
            [do]
                [set_variable]
                    name=chance_gear
                    rand=1..{CHANCE}
                [/set_variable]
                [if]
                    [variable]
                        name=chance_gear
                        equals=1
                    [/variable]
                    [then]
                        [apply_gear]
                            id=$unit_add_gear_TEMP[$uag_i].id
                            gear_id={GEAR_ID}
                        [/apply_gear]
                    [/then]
                [/if]
            [/do]
        [/for]
        {CLEAR_VARIABLE unit_add_gear_TEMP}
        {CLEAR_VARIABLE chance_gear}
    [/event]
#enddef

#define WOL_INIT_RANDOM_GEAR
    # random gear given to the AI enemy units, throughout the campaign - might want to make this Lua instead?
    # undead
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Skeleton,Skeleton Archer,Revenant,Bone Shooter, Banebow, Draug) (rusty_armor) 6}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Banebow, Draug) (bone_helmet) 4}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Skeleton, Revenant, Walking Corpse, Soulless) (rusty_helmet) 6}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Skeleton, Revenant, Walking Corpse, Soulless) (rotten_cloak) 3}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Skeleton, Revenant, Draug) (rusty_axe) 6}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Skeleton, Revenant, Draug) (rusty_targ) 8}
    # despair
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Phantom Cloak, Phantom Shadow, Phantom Master, Phantom Rider, Phantom Horseman, Phantom Slayer) (black_cowl) 6}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Phantom Cloak, Phantom Shadow, Phantom Master) (black_cloak) 8}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Phantom Cloak, Phantom Shadow, Phantom Master, Phantom Widow, Phantom Midnight, Phantom White, Phantom Banshee, Phantom Rider, Phantom Horseman, Phantom Slayer) (black_tunic) 8}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Phantom Master, Phantom Banshee, Phantom Slayer) (black_gloves) 7}
    # orcs
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Orcish Drifter, Orcish Wanderer, Orcish Vagrant, Orcish Traveler, Orcish Slinger, Orcish Hunter, Orcish Serf, Orcish Foreman, Orcish Fireline) (orc_cloak) 7}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Orcish Drifter, Orcish Wanderer, Orcish Vagrant, Orcish Traveler) (shaman_tunic) 5}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Orcish Drifter, Orcish Wanderer, Orcish Vagrant, Orcish Traveler) (obsidian_bracelet) 7}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Orcish Serf, Orcish Foreman, Orcish Fireline) (obsidian_axe) 4}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Orcish Serf, Orcish Slinger, Orcish Archer) (hide_buckler) 5}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Orcish Foreman, Orcish Raider, Orcish Hunter, Orcish Crossbowman) (bronze_buckler) 5}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Orcish Foreman, Orcish Raider, Orcish Fireline, Orcish Hunter, Orcish Crossbowman) (kidney_belt) 8}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Orcish Crossbowman, Orcish Slurbow) (poison_arrows) 7}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Orcish Grunt, Orcish Serf, Orcish Slinger, Rat Rider, Orcish Archer, Orcish Rider) (leather_armor) 6}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Orcish Foreman, Orcish Warrior, Orcish Hunter, Rat Lancer, Orcish Crossbowman, Orcish Slurbow, Orcish Cavalry, Orcish Destrier) (scale_armor) 6}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Orcish Foreman, Orcish Hunter, Rat Lancer, Orcish Crossbowman, Orcish Slurbow, Orcish Cavalry, Orcish Destrier) (leather_vambrace) 9}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Archaic_Goblin, Frost Goblin, Rat Rider, Rat Lancer, Rat Dragoon, Orcish SnowWalker, Orcish IceStalker) (obsidian_spear) 4}
    # royalists
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Spearman, Pikeman, Halberdier, Swordsman, Royal Guard) (steel_helmet) 6}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Pikeman, Swordsman, Northern Soldier, Dragoon) (scale_armor) 5}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Pikeman, Halberdier) (steel_spear) 7}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Swordsman, Royal Guard) (steel_blade) 7}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Halberdier, Royal Guard, Northern Elite, Cavalier) (chain_armor) 5}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Northern Fighter, Spearman, Cavalryman) (leather_armor) 6}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Northern Fighter, Northern Soldier, Northern Elite) (wooden_shield) 5}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Northern Fighter, Spearman, Cavalryman, Pikeman, Halberdier, Swordsman, Royal Guard, Northern Soldier, Northern Elite, Dragoon, Cavalier) (leather_gloves) 8}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Cavalryman, Pikeman, Halberdier, Swordsman, Royal Guard, Northern Soldier, Northern Elite, Dragoon, Cavalier) (leather_vambrace) 10}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Cavalryman, Pikeman, Halberdier, Swordsman, Royal Guard, Northern Soldier, Northern Elite, Dragoon, Cavalier) (officer_boots) 12}
    #elves
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Elvish Fighter, Elvish Archer, Elvish Ranger, Elvish Hero, Elvish Captain, Elvish Champion, Elvish Marshal, Elvish Marksman, Elvish Sharpshooter, Elvish Avenger) (elf_cloak) 6}
    {WOL_INIT_RANDOM_GEAR_INTERNAL (Elvish Fighter, Elvish Archer, Elvish Ranger, Elvish Hero, Elvish Captain, Elvish Champion, Elvish Marshal, Elvish Marksman, Elvish Sharpshooter, Elvish Avenger) (elven_tunic) 6}

#enddef

#define WOL_INIT_LUA

    {WOL_INIT_LUA_ICON}
    {WOL_INIT_LUA_PRESTART}
    {WOL_INIT_WML_POOL_SWAP}
    {WOL_INIT_WML_MOVETO}

    {WOL_INIT_WML_DIE}
    {WOL_INIT_WML_ADVANCE}
    {WOL_INIT_RANDOM_GEAR}

#enddef
